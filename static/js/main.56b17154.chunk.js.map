{"version":3,"sources":["reportWebVitals.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","container/ErrorBoundary.js","container/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","CardList","robots","Error","SearchBox","searchField","searchChange","react_default","a","createElement","className","type","placeholder","value","onChange","Scroll","props","console","log","children","style","overflowY","border","height","ErrorBoundary","_Component","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","key","error","info","setState","Component","App","onSearchChange","event","target","_this2","fetch","response","json","users","_this$state","filteredRobots","filter","robot","name","toLowerCase","includes","length","components_SearchBox","components_Scroll","container_ErrorBoundary","components_CardList","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_container_App"],"mappings":"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","file":"static/js/main.56b17154.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport Card from \"./Card\";\n\nconst CardList = ({ robots }) => {\n  if (true) {\n    throw new Error(\"Noooooo!\");\n  }\n  return (\n    <div>\n      {robots.map((user) => {\n        return (\n          <Card\n            key={user.id}\n            id={user.id}\n            name={user.name}\n            email={user.email}\n          ></Card>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default CardList;\n","import React from \"react\";\n\nconst SearchBox = ({ searchField, searchChange }) => {\n  return (\n    <div className=\"pa2\">\n      <input\n        className=\"pa3 ba b--green bg-lightest-blue\"\n        type=\"search\"\n        placeholder=\"search field\"\n        value={searchField}\n        onChange={searchChange}\n      ></input>\n    </div>\n  );\n};\n\nexport default SearchBox;\n","import React from \"react\";\n\nconst Scroll = (props) => {\n  console.log(props.children);\n  return (\n    <div\n      style={{\n        overflowY: \"scroll\",\n        border: \"5px solid black\",\n        height: \"800px\",\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default Scroll;\n","import React, { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Opps! Something is wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"../components/CardList\";\nimport SearchBox from \"../components/SearchBox\";\nimport Scroll from \"../components/Scroll\";\nimport ErrorBoundary from \"./ErrorBoundary\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      searchField: \"\",\n      robots: [],\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => {\n        return response.json();\n      })\n      .then((users) => {\n        this.setState({ robots: users });\n      });\n  }\n\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n  render() {\n    const { searchField, robots } = this.state;\n    const filteredRobots = robots.filter((robot) => {\n      return robot.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n\n    if (!robots.length) {\n      return <h1>Loading</h1>;\n    } else {\n      return (\n        <div className=\"tc\">\n          <h1 className=\"f1\">RoboFriends</h1>\n          <SearchBox\n            searchChange={this.onSearchChange}\n            searchField={this.state.searchField}\n          ></SearchBox>\n          <Scroll>\n            <ErrorBoundary>\n              <CardList robots={filteredRobots} />\n            </ErrorBoundary>\n          </Scroll>\n        </div>\n      );\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport \"tachyons\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport App from \"./container/App\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    {/* <CardList robots={robots}></CardList>\n     */}\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}